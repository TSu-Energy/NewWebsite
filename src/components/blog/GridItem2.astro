---
import { Icon } from 'astro-icon/components';
import type { Post } from '~/types';
import { twMerge } from 'tailwind-merge';

import Image from '~/components/common/Image.astro';

import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';

export interface Props {
  post: Post;
  classes?: Record<string, string>;
}

const { post, classes = {} } = Astro.props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  date: dateClass = '',
  description: descriptionClass = '',
  image:
    imageClass = 'relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%] overflow-hidden bg-gray-400 dark:bg-slate-700 rounded shadow-lg',
  icon: defaultIconClass = 'text-primary dark:text-slate-200 border-primary dark:border-blue-700',
} = classes;

const image = await findImage(post.image);
---

<article class={twMerge('flex', containerClass)}>
  <div class="flex flex-col items-center mr-4 rtl:mr-0 rtl:ml-4">
    <div class="flex">
      {(<Icon name="tabler:news" class={twMerge('w-10 h-10 p-2 rounded-full border-2', defaultIconClass)} />)}
    </div>
    <div class="w-px h-full bg-black/10 dark:bg-slate-400/50"></div>
  </div>
  <div class={twMerge('max-w-screen-xl box-border grid md:grid-cols-2', panelClass)}>
    <a href={getPermalink(post.permalink, 'post')}>
      {post.title && <p class={twMerge('text-primary text-xl font-bold', titleClass)} set:html={post.title} />}
      {
        post.publishDate && (
          <p
            class={twMerge('text-gray-500 text-md font-bold', dateClass)}
            set:html={post.publishDate.toLocaleDateString()}
          />
        )
      }
      {post.excerpt && <p class={twMerge('text-muted mt-2', descriptionClass)} set:html={post.excerpt} />}
    </a>

    {
      image && (
        <a href={getPermalink(post.permalink, 'post')} class="relative md:basis-1/2">
          <div class={twMerge(imageClass)}>
            {/* {typeof post.image === 'string' ? (
              <Fragment set:html={post.image} />
            ) : ( */}
            <Image
              class="inset-0 object-cover object-top w-full rounded-md shadow-lg md:absolute md:h-full bg-gray-400 dark:bg-slate-700"
              widths={[400, 768]}
              sizes="(max-width: 768px) 100vw, 432px"
              width={609}
              height={360}
              layout="cover"
              src={image}
              alt={post.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
            {/* )} */}
          </div>
        </a>
      )
    }
  </div>
</article>

<!-- <article class="mb-6 transition">
  <div class="relative md:h-64 bg-gray-400 dark:bg-slate-700 rounded shadow-lg mb-6">
    {
      image && (
        <a href={getPermalink(post.permalink, 'post')}>
          <Image
            src={image}
            class="w-full md:h-full rounded shadow-lg bg-gray-400 dark:bg-slate-700"
            widths={[400, 900]}
            width={400}
            sizes="(max-width: 900px) 400px, 900px"
            alt={post.title}
            aspectRatio="16:9"
            layout="cover"
            loading="lazy"
            decoding="async"
          />
        </a>
      )
    }
  </div>
  <h3 class="mb-2 text-xl font-bold leading-tight sm:text-2xl font-heading">
    {
      !APP_BLOG?.post?.isEnabled ? (
        post.title
      ) : (
        <a
          href={getPermalink(post.permalink, 'post')}
          class="hover:text-primary dark:hover:text-blue-700  transition ease-in duration-200"
        >
          {post.title}
        </a>
      )
    }
  </h3>
  <p class="text-muted dark:text-slate-400 text-lg">{post.excerpt}</p>
</article> -->
